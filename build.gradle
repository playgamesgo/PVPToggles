plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven {
        name "Nucleoid"
        url "https://maven.nucleoid.xyz/"
    }
    maven {
        name "Bawnorton"
        url "https://maven.bawnorton.com/releases"
    }
    maven {
        name "Terraformers"
        url "https://maven.terraformersmc.com/"
    }
    maven {
        name "Wisp Forest"
        url 'https://maven.wispforest.io/releases/'
    }
    maven {
        name "sonatype-oss-snapshots1"
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        mavenContent { snapshotsOnly() }
    }
    exclusiveContent {
        forRepository {
            maven {
                name "Modrinth"
                url "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${property('minecraft_version')}"
    mappings "net.fabricmc:yarn:${property('yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${property('loader_version')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('fabric_version')}"
    include(modImplementation "net.kyori:adventure-platform-fabric:${property('adventure_version')}")

    modImplementation "dev.isxander:yet-another-config-lib:${property('yacl_version')}"
    modImplementation "com.terraformersmc:modmenu:${property('modmenu_version')}"
    include(modImplementation "eu.pb4:placeholder-api:${property('placeholder_api_version')}")
    modImplementation "io.wispforest:owo-lib:${property('owo_version')}"

    modImplementation "maven.modrinth:fabric-custom-names:${property('fabric_custom_names_version')}"
    modImplementation "me.lucko:fabric-permissions-api:${property('fabric_permissions_api_version')}"

    compileOnly "org.projectlombok:lombok:${property('lombok_version')}"
    annotationProcessor "org.projectlombok:lombok:${property('lombok_version')}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    inputs.property "yacl_version", project.yacl_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version,
                "yacl_version": project.yacl_version
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-parameters")
    options.compilerArgs.add("--enable-preview")
}

java {
    targetCompatibility = JavaVersion.VERSION_21
    sourceCompatibility = JavaVersion.VERSION_21
}

loom {
    accessWidenerPath = file("src/main/resources/pvptoggles.accesswidener")
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
    }
}